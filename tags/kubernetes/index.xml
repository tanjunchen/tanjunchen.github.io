<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on 漫步远方，心荡神往</title><link>https://tanjunchen.github.io/tags/kubernetes/</link><description>Recent content in kubernetes on 漫步远方，心荡神往</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>陈谭军</copyright><lastBuildDate>Sat, 19 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tanjunchen.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Istio 服务网格如何处理安全问题</title><link>https://tanjunchen.github.io/post/2022-02-19-istio-security/</link><pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2022-02-19-istio-security/</guid><description>在这篇博客中，我将解释 Istio 如何解决诸如流量加密、提供灵活的服务访问控制、配置双向 TLS 和细粒度访问策略与审计等问题。 Istio 安全架构 Istio 服务网格发展历史如</description></item><item><title>调度框架 Scheduling Framework</title><link>https://tanjunchen.github.io/post/2021-12-18-scheduling-framework/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2021-12-18-scheduling-framework/</guid><description>架构设计 相关文档参见 Scheduling Framework。 前提 调度框架定义了一组扩展点，用户可以实现扩展点定义的接口来定义自己的调度逻辑，并将扩展注册到扩展</description></item></channel></rss>