<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ebpf on 漫步远方，心荡神往</title><link>https://tanjunchen.github.io/tags/ebpf/</link><description>Recent content in ebpf on 漫步远方，心荡神往</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>陈谭军</copyright><lastBuildDate>Thu, 02 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://tanjunchen.github.io/tags/ebpf/index.xml" rel="self" type="application/rss+xml"/><item><title>监测 Linux 内存缺页中断事件</title><link>https://tanjunchen.github.io/post/2024-05-02-linux-page-fault/</link><pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2024-05-02-linux-page-fault/</guid><description>内存缺页中断概念 内存缺页中断（page fault）是一种由于程序试图访问的内存页不在物理内存中而产生的一种中断。这通常发生在以下几种情况： 内</description></item><item><title>监测 Linux 内核内存 OOM 事件</title><link>https://tanjunchen.github.io/post/2024-05-01-linux-oom/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2024-05-01-linux-oom/</guid><description>内存 OOM Linux内核有个机制叫OOMkiller（Out-Of-Memory killer），该机制会监控那些占用内存过大，尤其是瞬间很快消耗</description></item><item><title>eBPF 探索 Linux 可观测性、网络、安全、性能</title><link>https://tanjunchen.github.io/post/2023-12-09-ebpf-share/</link><pubDate>Sat, 09 Dec 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-12-09-ebpf-share/</guid><description>小试牛刀 root@instance-820epr0w:~/tanjunchen# ./helloworld Hello World Hello World ...... root@instance-820epr0w:~/tanjunchen/bpf-developer-tutorial/src/24-hide# ps aux | grep helloworld root 3312792 0.0 0.0 2776 964 pts/0 S+ 20:22 0:00 ./helloworld root 3313669 0.0 0.0 9748 2316 pts/1 S+ 20:22 0:00 grep --color=auto helloworld 问题：如果我不想让别人看到我正在运行的进程，可以如何实现？</description></item><item><title>pwru: 一款基于 eBPF 的细粒度网络数据包排查工具</title><link>https://tanjunchen.github.io/post/2023-11-11-ebpf-pwru/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-11-11-ebpf-pwru/</guid><description>介绍 Linux 中的网络是个很复杂的问题！！！我们常常会遇见以下问题。 网络命名空间（network）使网络变得更加复杂； 当一个数据包丢失时，作为网络工</description></item><item><title>eBPF 周边生态圈明星产品</title><link>https://tanjunchen.github.io/post/2023-11-04-ebpf-ecosystem/</link><pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-11-04-ebpf-ecosystem/</guid><description>主要项目 BCC https://github.com/iovisor/bcc，BCC是一个基于eBPF构建的用于创建高效内核跟踪和程序操作的工具包</description></item><item><title>使用 Pixie 实现 Kubernetes 服务可观测性（4）</title><link>https://tanjunchen.github.io/post/2023-10-21-introduce-pixie/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-10-21-introduce-pixie/</guid><description>bpftrace bpftrace 是 Linux eBPF 的高级跟踪语言。 它的语言受到 awk 和 C 以及其他跟踪器（例如 DTrace 和 SystemTap）的启发。bpftrace 开发语言是 shell，支持 x</description></item><item><title>使用 Hubble 实现 Kubernetes 服务可观测性（3）</title><link>https://tanjunchen.github.io/post/2023-10-14-cilium-hubble/</link><pubDate>Sat, 14 Oct 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-10-14-cilium-hubble/</guid><description>介绍 Hubble - 使用 eBPF 的 Kubernetes 的网络、服务和安全可观测性。Hubble 则是 Cilium 的一个子项目，专注于提供网络可观察性。Hubble 可以收集和可视化 Cilium 网络的流</description></item><item><title>使用 coroot 实现 Kubernetes 服务可观测性（2）</title><link>https://tanjunchen.github.io/post/2023-10-05-ebpf-coroot/</link><pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-10-05-ebpf-coroot/</guid><description>核心实现思路： coroot 使用数据库 SQLite（生产环境 Click House）+ Prometheus + Opentelemetry 去做应用（网络、IO、磁盘、文件等）可视化。 coroot-node-agent 使用 eBPF（trace</description></item><item><title>Cilium Mesh 常见场景与示例</title><link>https://tanjunchen.github.io/post/2023-08-12-cilium-mesh-example/</link><pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-08-12-cilium-mesh-example/</guid><description>Cilium 官方版本给出的 Service Mesh 全景图，不同于其它 Service Mesh 开源项目设计了很多 CRD 概念，Cilium Service Mesh 当前专注实现了 mesh data plane，通过开放、包容的设计，能够</description></item><item><title>使用 caretta 实现 Kubernetes 服务可观测性（1）</title><link>https://tanjunchen.github.io/post/2023-06-25-caretta-ebpf/</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-06-25-caretta-ebpf/</guid><description>前言 为啥 eBPF 卸载之后，使用 bpftool 还能看到相关 map、prog 等？具体可以参考文章。 介绍 Caretta 是一种轻量级的独立工具，快速展示集群中运行的服务可视化网络</description></item><item><title>深入理解 Cilium 核心原理</title><link>https://tanjunchen.github.io/post/2023-05-01-cilium-learn/</link><pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-05-01-cilium-learn/</guid><description>背景 传统的基于二层转发（Linux bridge、Netfilter/iptables、OVS 等）和/或三层路由的网络虚拟化方案中，数据包的转</description></item><item><title>译文：Cilium Mesh - Mesh 连接所有应用</title><link>https://tanjunchen.github.io/post/2023-04-20-cilium-mesh-one-mesh/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-04-20-cilium-mesh-one-mesh/</guid><description>我们有令人兴奋的消息要和大家分享。由于其先进的安全性、性能和卓越的可扩展性，Cilium 已迅速成为 Kubernetes 容器网络的标准。随着 Cilium 的使用率不断提高，</description></item><item><title>简介 eBPF 常见跟踪点类型</title><link>https://tanjunchen.github.io/post/2023-04-05-ebpf-category/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-04-05-ebpf-category/</guid><description>通过 eBPF 可以对多种类型的事件进行跟踪，例如 kprobe、kretprobe、tracepoint、uprobe、uretprobe、socke</description></item><item><title>简单了解与学习 eBPF</title><link>https://tanjunchen.github.io/post/2023-04-01-ebpf-introduce/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://tanjunchen.github.io/post/2023-04-01-ebpf-introduce/</guid><description>什么是 eBPF？ eBPF 是一项革命性的技术，起源于 Linux 内核，可以在操作系统内核等特权上下文中运行沙盒程序。它用于安全有效地扩展内核的功能，而无需更改</description></item></channel></rss>